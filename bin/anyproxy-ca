#!/usr/bin/env node

'use strict'

const { program } = require('commander');
const chalk = require('chalk');
const certMgr = require('../src/certMgr');
const exec = require('child_process').exec;
const path = require('path');
const inquirer = require('inquirer').default;
function openFolderOfFile(filePath) {
    const platform = process.platform;
    if (/^win/.test(platform)) {
        exec('start .', { cwd: path.dirname(filePath) });
    } else if (/darwin/.test(platform)) {
        exec(`open -R ${filePath}`);
    }
}

function guideToTrustCA() {
    const certPath = certMgr.getRootCAFilePath();
    if (certPath) {
        openFolderOfFile(certPath);
    } else {
        console.error('获取证书路径失败');
    }
}

async function main() {
    program
        .option('-c, --clear', '清除所有临时证书和根CA')
        .option('-g, --generate', '生成新的根CA')
        .parse(process.argv);

    const options = program.opts();
    if (options.clear) {
        await certMgr.clearCerts();
        console.log(chalk.green('清除完成！'));
    } else if (options.generate) {
        certMgr.generateRootCA();
    } else {
        console.log('正在检测CA状态...');
        let status = await certMgr.getCAStatus();
        if (!status.exist) {
            console.log('AnyProxy CA不存在。');
            let answers = await inquirer.prompt([{
                type: 'confirm',
                name: 'ifCreate',
                message: '是否要生成一个？',
                default: true
            }])
            if (answers.ifCreate) {
                certMgr.generateRootCA();
            }
            return;
        }
        if (!status.trusted) {
            if (/^win/.test(process.platform)) {
                console.log('AnyProxy CA已存在，请确保它已被信任');
            } else {
                console.log('AnyProxy CA已存在，但未被信任');
                let answers = await inquirer.prompt([{
                    type: 'confirm',
                    name: 'ifGotoTrust',
                    message: '是否要打开文件夹并信任它？',
                    default: true
                }]);
                if (answers.ifGotoTrust) {
                    guideToTrustCA();
                }
            }
            return;
        }
        console.log(chalk.green('AnyProxy CA已被信任'));
    }
}

try {
    main();
} catch (e) {
    console.error(e);
}

